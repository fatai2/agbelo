type User @aws_cognito_user_pools {
  userId: ID!
  createdAt: String
  updatedAt: String
  owner: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  posts(createdAt: ModelStringKeyConditionInput, filter: ModelPostFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelPostConnection @aws_cognito_user_pools @aws_api_key
}

type Post @aws_cognito_user_pools @aws_api_key {
  id: ID!
  authorId: ID!
  author: User
  postContent: String
  createdAt: String
  owner: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  updatedAt: AWSDateTime!
  translations(filter: ModelTranslationFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelTranslationConnection @aws_cognito_user_pools @aws_api_key
}

type Translation @aws_cognito_user_pools @aws_api_key {
  id: ID!
  authorId: ID!
  postId: ID!
  translationIvie: String!
  translationSound: String
  exampleIvie: String
  exampleEnglish: String
  author: User
  voteCount: Int
  owner: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  post: Post @aws_cognito_user_pools @aws_api_key
  votes(filter: ModelTranslationVoteFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelTranslationVoteConnection @aws_cognito_user_pools @aws_api_key
}

type TranslationVote @aws_cognito_user_pools @aws_api_key {
  id: ID!
  userId: ID!
  translationId: ID!
  createdAt: String!
  vote: VoteType
  owner: String
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  updatedAt: AWSDateTime!
  translation: Translation @aws_cognito_user_pools @aws_api_key
}

input VoteInput {
  type: VoteType!
  id: ID!
}

enum VoteType {
  up
  down
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelUserConnection {
  items: [User]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelUserFilterInput {
  userId: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
  and: [ModelUserFilterInput]
  or: [ModelUserFilterInput]
  not: ModelUserFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  syncUsers(filter: ModelUserFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelUserConnection
  getUser(userId: ID!): User
  listUsers(userId: ID, filter: ModelUserFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelUserConnection
  listPosts(filter: ModelPostFilterInput, limit: Int, nextToken: String): ModelPostConnection @aws_api_key @aws_cognito_user_pools
  getPost(id: ID!): Post @aws_api_key @aws_cognito_user_pools
  syncPosts(filter: ModelPostFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelPostConnection @aws_api_key @aws_cognito_user_pools
  listTranslations(filter: ModelTranslationFilterInput, limit: Int, nextToken: String): ModelTranslationConnection @aws_api_key @aws_cognito_user_pools
  getTranslation(id: ID!): Translation @aws_api_key @aws_cognito_user_pools
  syncTranslations(filter: ModelTranslationFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelTranslationConnection @aws_api_key @aws_cognito_user_pools
  getTranslationVote(id: ID!): TranslationVote @aws_api_key @aws_cognito_user_pools
  listTranslationVotes(filter: ModelTranslationVoteFilterInput, limit: Int, nextToken: String): ModelTranslationVoteConnection @aws_api_key @aws_cognito_user_pools
  syncTranslationVotes(filter: ModelTranslationVoteFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelTranslationVoteConnection @aws_api_key @aws_cognito_user_pools
}

input CreateUserInput {
  userId: ID!
  createdAt: String
  updatedAt: String
  owner: String
  _version: Int
}

input UpdateUserInput {
  userId: ID!
  createdAt: String
  updatedAt: String
  owner: String
  _version: Int
}

input DeleteUserInput {
  userId: ID!
  _version: Int
}

type Mutation {
  createUser(input: CreateUserInput!, condition: ModelUserConditionInput): User @aws_cognito_user_pools
  updateUser(input: UpdateUserInput!, condition: ModelUserConditionInput): User @aws_cognito_user_pools
  deleteUser(input: DeleteUserInput!, condition: ModelUserConditionInput): User @aws_cognito_user_pools
  createPost(input: CreatePostInput!, condition: ModelPostConditionInput): Post @aws_cognito_user_pools
  updatePost(input: UpdatePostInput!, condition: ModelPostConditionInput): Post @aws_cognito_user_pools
  deletePost(input: DeletePostInput!, condition: ModelPostConditionInput): Post @aws_cognito_user_pools
  createTranslation(input: CreateTranslationInput!, condition: ModelTranslationConditionInput): Translation @aws_cognito_user_pools
  updateTranslation(input: UpdateTranslationInput!, condition: ModelTranslationConditionInput): Translation @aws_cognito_user_pools
  deleteTranslation(input: DeleteTranslationInput!, condition: ModelTranslationConditionInput): Translation @aws_cognito_user_pools
  createTranslationVote(input: CreateTranslationVoteInput!, condition: ModelTranslationVoteConditionInput): TranslationVote @aws_cognito_user_pools
  updateTranslationVote(input: UpdateTranslationVoteInput!, condition: ModelTranslationVoteConditionInput): TranslationVote @aws_cognito_user_pools
  deleteTranslationVote(input: DeleteTranslationVoteInput!, condition: ModelTranslationVoteConditionInput): TranslationVote @aws_cognito_user_pools
}

input ModelUserConditionInput {
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserConditionInput]
  or: [ModelUserConditionInput]
  not: ModelUserConditionInput
}

type ModelPostConnection @aws_api_key @aws_cognito_user_pools {
  items: [Post]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelPostFilterInput {
  id: ModelIDInput
  authorId: ModelIDInput
  postContent: ModelStringInput
  createdAt: ModelStringInput
  owner: ModelStringInput
  and: [ModelPostFilterInput]
  or: [ModelPostFilterInput]
  not: ModelPostFilterInput
}

input CreatePostInput {
  id: ID
  authorId: ID!
  postContent: String
  createdAt: String
  owner: String
  _version: Int
}

input UpdatePostInput {
  id: ID!
  authorId: ID
  postContent: String
  createdAt: String
  owner: String
  _version: Int
}

input DeletePostInput {
  id: ID
  _version: Int
}

input ModelPostConditionInput {
  postContent: ModelStringInput
  createdAt: ModelStringInput
  owner: ModelStringInput
  and: [ModelPostConditionInput]
  or: [ModelPostConditionInput]
  not: ModelPostConditionInput
}

type Subscription {
  onCreatePost: Post @aws_subscribe(mutations: ["createPost"]) @aws_api_key @aws_cognito_user_pools
  onUpdatePost: Post @aws_subscribe(mutations: ["updatePost"]) @aws_api_key @aws_cognito_user_pools
  onDeletePost: Post @aws_subscribe(mutations: ["deletePost"]) @aws_api_key @aws_cognito_user_pools
  onCreateTranslation: Translation @aws_subscribe(mutations: ["createTranslation"]) @aws_api_key @aws_cognito_user_pools
  onUpdateTranslation: Translation @aws_subscribe(mutations: ["updateTranslation"]) @aws_api_key @aws_cognito_user_pools
  onDeleteTranslation: Translation @aws_subscribe(mutations: ["deleteTranslation"]) @aws_api_key @aws_cognito_user_pools
  onCreateTranslationVote: TranslationVote @aws_subscribe(mutations: ["createTranslationVote"]) @aws_api_key @aws_cognito_user_pools
  onUpdateTranslationVote: TranslationVote @aws_subscribe(mutations: ["updateTranslationVote"]) @aws_api_key @aws_cognito_user_pools
  onDeleteTranslationVote: TranslationVote @aws_subscribe(mutations: ["deleteTranslationVote"]) @aws_api_key @aws_cognito_user_pools
}

type ModelTranslationConnection @aws_api_key @aws_cognito_user_pools {
  items: [Translation]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelTranslationFilterInput {
  id: ModelIDInput
  authorId: ModelIDInput
  postId: ModelIDInput
  translationIvie: ModelStringInput
  translationSound: ModelStringInput
  exampleIvie: ModelStringInput
  exampleEnglish: ModelStringInput
  voteCount: ModelIntInput
  owner: ModelStringInput
  and: [ModelTranslationFilterInput]
  or: [ModelTranslationFilterInput]
  not: ModelTranslationFilterInput
}

input CreateTranslationInput {
  id: ID
  authorId: ID!
  postId: ID!
  translationIvie: String!
  translationSound: String
  exampleIvie: String
  exampleEnglish: String
  voteCount: Int
  owner: String
  _version: Int
}

input UpdateTranslationInput {
  id: ID!
  authorId: ID
  postId: ID
  translationIvie: String
  translationSound: String
  exampleIvie: String
  exampleEnglish: String
  voteCount: Int
  owner: String
  _version: Int
}

input DeleteTranslationInput {
  id: ID
  _version: Int
}

input ModelTranslationConditionInput {
  postId: ModelIDInput
  translationIvie: ModelStringInput
  translationSound: ModelStringInput
  exampleIvie: ModelStringInput
  exampleEnglish: ModelStringInput
  voteCount: ModelIntInput
  owner: ModelStringInput
  and: [ModelTranslationConditionInput]
  or: [ModelTranslationConditionInput]
  not: ModelTranslationConditionInput
}

type ModelTranslationVoteConnection @aws_api_key @aws_cognito_user_pools {
  items: [TranslationVote]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelVoteTypeInput {
  eq: VoteType
  ne: VoteType
}

input ModelTranslationVoteFilterInput {
  id: ModelIDInput
  userId: ModelIDInput
  translationId: ModelIDInput
  createdAt: ModelStringInput
  vote: ModelVoteTypeInput
  owner: ModelStringInput
  and: [ModelTranslationVoteFilterInput]
  or: [ModelTranslationVoteFilterInput]
  not: ModelTranslationVoteFilterInput
}

input CreateTranslationVoteInput {
  id: ID
  userId: ID!
  translationId: ID!
  createdAt: String
  vote: VoteType
  owner: String
  _version: Int
}

input UpdateTranslationVoteInput {
  id: ID!
  userId: ID
  translationId: ID
  createdAt: String
  vote: VoteType
  owner: String
  _version: Int
}

input DeleteTranslationVoteInput {
  id: ID
  _version: Int
}

input ModelTranslationVoteConditionInput {
  translationId: ModelIDInput
  createdAt: ModelStringInput
  vote: ModelVoteTypeInput
  owner: ModelStringInput
  and: [ModelTranslationVoteConditionInput]
  or: [ModelTranslationVoteConditionInput]
  not: ModelTranslationVoteConditionInput
}

input ModelStringKeyConditionInput {
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  between: [String]
  beginsWith: String
}
